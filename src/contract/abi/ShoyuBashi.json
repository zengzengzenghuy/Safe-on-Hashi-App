[
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_owner",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "_hashi",
				"type": "address"
			}
		],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "emitter",
				"type": "address"
			},
			{
				"internalType": "contract IOracleAdapter",
				"name": "adapter",
				"type": "address"
			}
		],
		"name": "AdapterAlreadyEnabled",
		"type": "error"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "emitter",
				"type": "address"
			},
			{
				"internalType": "contract IOracleAdapter",
				"name": "adapter",
				"type": "address"
			}
		],
		"name": "AdapterNotEnabled",
		"type": "error"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "emitter",
				"type": "address"
			},
			{
				"internalType": "contract Hashi",
				"name": "hashi",
				"type": "address"
			}
		],
		"name": "DuplicateHashiAddress",
		"type": "error"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "emitter",
				"type": "address"
			},
			{
				"internalType": "contract IOracleAdapter",
				"name": "adapterOne",
				"type": "address"
			},
			{
				"internalType": "contract IOracleAdapter",
				"name": "adapterTwo",
				"type": "address"
			}
		],
		"name": "DuplicateOrOutOfOrderAdapters",
		"type": "error"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "emitter",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "threshold",
				"type": "uint256"
			}
		],
		"name": "DuplicateThreashold",
		"type": "error"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "emitter",
				"type": "address"
			},
			{
				"internalType": "contract IOracleAdapter",
				"name": "adapter",
				"type": "address"
			}
		],
		"name": "InvalidAdapter",
		"type": "error"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "emitter",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "domain",
				"type": "uint256"
			}
		],
		"name": "NoAdaptersEnabled",
		"type": "error"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "emitter",
				"type": "address"
			}
		],
		"name": "NoAdaptersGiven",
		"type": "error"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "emitter",
				"type": "address"
			}
		],
		"name": "ThresholdNotMet",
		"type": "error"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "emitter",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "contract Hashi",
				"name": "hashi",
				"type": "address"
			}
		],
		"name": "HashiSet",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "emitter",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "owner",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "contract Hashi",
				"name": "hashi",
				"type": "address"
			}
		],
		"name": "Init",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "uint8",
				"name": "version",
				"type": "uint8"
			}
		],
		"name": "Initialized",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "emitter",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "uint256",
				"name": "domain",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "contract IOracleAdapter[]",
				"name": "adapters",
				"type": "address[]"
			}
		],
		"name": "OracleAdaptersDisabled",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "emitter",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "uint256",
				"name": "domain",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "contract IOracleAdapter[]",
				"name": "adapters",
				"type": "address[]"
			}
		],
		"name": "OracleAdaptersEnabled",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "previousOwner",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "newOwner",
				"type": "address"
			}
		],
		"name": "OwnershipTransferred",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "emitter",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "domain",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "threshold",
				"type": "uint256"
			}
		],
		"name": "ThresholdSet",
		"type": "event"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			},
			{
				"internalType": "contract IOracleAdapter",
				"name": "",
				"type": "address"
			}
		],
		"name": "adapters",
		"outputs": [
			{
				"internalType": "contract IOracleAdapter",
				"name": "previous",
				"type": "address"
			},
			{
				"internalType": "contract IOracleAdapter",
				"name": "next",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "domain",
				"type": "uint256"
			},
			{
				"internalType": "contract IOracleAdapter[]",
				"name": "_adapters",
				"type": "address[]"
			}
		],
		"name": "checkAdapterOrderAndValidity",
		"outputs": [],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "domain",
				"type": "uint256"
			},
			{
				"internalType": "contract IOracleAdapter[]",
				"name": "_adapters",
				"type": "address[]"
			}
		],
		"name": "disableOracleAdapters",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "domains",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "threshold",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "count",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "domain",
				"type": "uint256"
			},
			{
				"internalType": "contract IOracleAdapter[]",
				"name": "_adapters",
				"type": "address[]"
			}
		],
		"name": "enableOracleAdapters",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "domain",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "id",
				"type": "uint256"
			},
			{
				"internalType": "contract IOracleAdapter[]",
				"name": "_adapters",
				"type": "address[]"
			}
		],
		"name": "getHash",
		"outputs": [
			{
				"internalType": "bytes32",
				"name": "hash",
				"type": "bytes32"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "domain",
				"type": "uint256"
			}
		],
		"name": "getOracleAdapters",
		"outputs": [
			{
				"internalType": "contract IOracleAdapter[]",
				"name": "",
				"type": "address[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "domain",
				"type": "uint256"
			}
		],
		"name": "getThresholdAndCount",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "threshold",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "count",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "domain",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "id",
				"type": "uint256"
			}
		],
		"name": "getThresholdHash",
		"outputs": [
			{
				"internalType": "bytes32",
				"name": "hash",
				"type": "bytes32"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "domain",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "id",
				"type": "uint256"
			}
		],
		"name": "getUnanimousHash",
		"outputs": [
			{
				"internalType": "bytes32",
				"name": "hash",
				"type": "bytes32"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "hashi",
		"outputs": [
			{
				"internalType": "contract Hashi",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "bytes",
				"name": "initParams",
				"type": "bytes"
			}
		],
		"name": "init",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "owner",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "renounceOwnership",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "contract Hashi",
				"name": "_hashi",
				"type": "address"
			}
		],
		"name": "setHashi",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "domain",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "threshold",
				"type": "uint256"
			}
		],
		"name": "setThreshold",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "newOwner",
				"type": "address"
			}
		],
		"name": "transferOwnership",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	}
]